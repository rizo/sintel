%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 65 129 531 713 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: grafismos-logotipos-pcp.eps
%%CreationDate: Mon Feb 22 14:54:34 2010
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW Versão 13.0.0.739
%Color profile:  Perfil genérico de separações de offset
/CorelIsEPS true def
%%BeginResource: procset wCorel3Dict 3.0 0
/wCorel3Dict 300 dict def wCorel3Dict begin
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel3Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
403.44236 577.73594 530.30268 701.00646 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 1.00 0.00 1.00 0.00 null ] set_fill_color
460.54687 672.28271 m
455.41729 644.92724 L
472.85660 644.92724 L
478.09247 644.92724 482.45216 646.44463 485.93565 649.45814 C
489.41943 652.47165 491.15027 656.48920 491.15027 661.51162 C
491.15055 668.69235 484.93134 672.28271 472.51446 672.28271 C
460.54687 672.28271 L
@c
425.15575 701.00646 m
484.14047 701.00646 L
494.39877 701.00646 502.96876 699.72350 509.87169 697.15899 C
516.77490 694.59506 521.90362 690.85446 525.25899 685.96044 C
528.61465 681.06671 530.30268 675.01814 530.30268 667.83742 C
530.30268 664.65354 529.96082 661.23383 529.27682 657.57912 C
523.80595 629.98894 504.42180 616.20435 471.14674 616.20435 C
450.45950 616.20435 L
443.79128 577.73594 L
403.44236 577.73594 L
425.15575 701.00646 L
@c
F

@rax %Note: Object
65.09650 577.49641 416.47890 712.43121 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 1.00 1.00 0.00 null ] set_fill_color
202.77581 701.00646 m
261.76082 701.00646 L
272.01912 701.00646 280.58910 699.72378 287.49203 697.15899 C
294.39496 694.59506 299.52340 690.85446 302.87877 685.96044 C
305.99093 681.42189 307.66847 675.88980 307.89553 669.38230 C
308.99877 671.06268 310.17061 672.67899 311.41134 674.23068 C
318.95745 683.66891 327.66293 690.60444 337.52806 695.05852 C
347.39376 699.51402 356.99443 701.62838 366.33061 701.40586 C
380.32441 701.08044 391.12498 698.49666 398.71162 693.67635 C
406.29940 688.85518 411.22120 683.01780 413.43817 676.18205 C
415.65543 669.34942 416.67279 661.76192 416.44857 653.40113 C
379.99871 653.40142 L
380.54806 660.98948 378.87987 666.11480 375.03553 668.77880 C
371.19118 671.44422 366.98031 672.76602 362.42476 672.76602 C
354.83811 672.76658 348.73512 669.51156 344.11805 663.00236 C
339.50098 656.49345 336.38854 648.41868 334.76202 638.75707 C
334.33455 636.15288 333.88809 632.14554 333.46035 626.71521 C
333.78548 613.14775 339.96869 606.37521 352.01027 606.37521 C
363.07587 606.37521 370.88617 613.04627 375.44258 626.38980 C
412.38085 626.39008 L
409.77751 617.27811 405.44447 608.95786 399.36302 601.41175 C
393.28072 593.86592 385.87663 588.04838 377.15102 583.92000 C
368.42570 579.79020 358.74227 577.73537 348.10526 577.73537 C
331.50728 577.73565 318.57109 581.88472 309.29556 590.18428 C
300.02117 598.48271 295.28164 610.05742 295.05883 624.92598 C
295.29014 628.10589 295.52769 630.91928 295.76494 633.36472 C
285.86438 621.92381 270.19757 616.20435 248.76709 616.20435 C
228.07956 616.20435 L
221.41162 577.73594 L
181.06243 577.73594 L
202.77581 701.00646 L
@c
238.16693 672.28271 m
233.03764 644.92724 L
250.47666 644.92724 L
255.71282 644.92724 260.07250 646.44463 263.55600 649.45814 C
267.03950 652.47165 268.77061 656.48920 268.77061 661.51162 C
268.77061 668.69235 262.55140 672.28271 250.13480 672.28271 C
238.16693 672.28271 L
@c
168.91654 577.49641 m
150.54690 593.97222 L
128.85364 581.60636 103.76532 583.25046 82.82268 597.25984 C
82.35808 597.51014 82.03635 597.86731 81.42888 598.18904 C
80.96428 598.18932 L
78.49843 595.36602 76.17543 591.64894 74.78164 587.93216 C
75.96085 585.93090 79.17732 584.28680 78.06954 581.14176 C
77.81924 579.99855 76.67575 579.03335 75.35339 578.67591 C
71.74375 578.53332 70.20709 582.49984 67.63380 584.50139 C
66.59745 585.60945 65.63254 586.14520 65.09650 587.32469 C
74.78164 613.73565 L
75.13880 613.94995 L
89.72022 601.33408 112.16381 594.68655 130.49773 601.58409 C
132.92787 602.51357 135.85861 603.65707 137.57386 605.55118 C
137.46671 605.98035 L
129.74712 613.37849 121.45606 620.74006 113.45046 628.06649 C
112.59269 628.78139 112.05666 629.38857 111.19890 629.96060 C
110.77002 629.96088 L
106.55291 626.10094 103.26501 621.34753 98.83361 617.45216 C
98.36901 617.55931 L
87.64724 627.13757 L
91.11402 631.85471 95.47398 635.67865 99.19077 640.68208 C
98.94076 641.36098 L
95.83143 644.54202 L
97.04665 646.86501 99.04791 648.75883 101.19231 650.58151 C
102.90756 650.22435 103.51531 648.04422 105.58800 647.79392 C
108.62589 650.58151 110.87745 654.19115 114.34394 657.05017 C
128.85364 651.18954 L
129.03250 650.72494 L
125.31572 645.89981 121.09861 642.18302 117.38183 637.21531 C
117.38183 637.07244 117.48898 636.85814 117.73899 636.53641 C
125.20857 629.85345 132.67786 623.42050 140.50460 616.88013 C
142.50586 615.37918 143.79250 613.84252 145.75805 612.69874 C
146.47294 612.87789 L
154.76400 621.77641 157.44444 635.82151 155.08573 646.97187 C
152.08384 665.66324 140.61175 682.35307 125.92318 691.25187 C
119.81197 695.21924 112.23553 698.29228 105.40942 700.36526 C
108.26844 700.97301 111.69921 699.86494 114.95140 699.32863 C
139.11080 693.11055 156.40809 679.67263 166.41496 657.83650 C
174.84917 640.68208 173.66967 621.88356 162.23357 605.80148 C
158.98139 601.58438 L
158.98139 601.11978 L
159.30283 600.36945 160.12488 600.04743 160.69663 599.33282 C
176.24296 585.60945 L
174.27742 582.75014 171.81128 580.06970 169.23827 577.49641 C
168.91654 577.49641 L
@c
91.11402 701.12721 m
87.45676 712.43121 L
83.18041 701.19524 L
72.63128 701.19524 L
81.80220 695.45225 L
76.41524 683.38658 L
88.02000 691.17902 L
97.95345 683.79506 L
93.25077 695.87575 L
102.29584 701.12721 L
91.11402 701.12721 L
@c
89.99348 700.12602 m
87.45194 707.98479 L
84.48066 700.17676 L
77.15509 700.17676 L
83.52510 696.18614 L
79.78337 687.80551 L
87.84737 693.21969 L
94.74151 688.08671 L
91.47997 696.47924 L
97.76353 700.12602 L
89.99348 700.12602 L
@c
F

@rax %Note: Object
103.90195 373.42970 491.49751 533.80942 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 1.00 1.00 0.00 null ] set_fill_color
103.90195 533.80942 m
491.49751 533.80942 L
491.49751 373.42970 L
103.90195 373.42970 L
103.90195 533.80942 L
@c
F

@rax %Note: Object
119.47918 404.63575 472.52806 505.87965 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 0.00 null ] set_fill_color
406.40485 497.55600 m
403.71222 505.87965 L
400.56605 497.60872 L
392.80167 497.60872 L
399.54954 493.38142 L
395.58472 484.49877 L
404.12778 490.23298 L
411.43805 484.79896 L
407.97638 493.69238 L
414.63609 497.55600 L
406.40485 497.55600 L
@c
119.47918 407.02989 m
119.47918 410.41134 L
125.92687 411.10384 130.19017 412.78394 132.31106 415.43065 C
134.43279 418.07650 135.48246 424.41902 135.48246 434.47890 C
135.48246 467.28397 L
135.48246 472.19811 135.29339 476.16718 134.89483 479.19175 C
134.51669 482.19477 133.90724 484.31622 133.08831 485.55496 C
132.10157 487.02472 130.54706 488.22236 128.40491 489.14646 C
126.26277 490.07083 123.30142 490.84724 119.47918 491.45669 C
119.47918 494.71200 L
125.10794 495.08986 130.50539 495.34186 135.71376 495.50939 C
140.92214 495.67748 145.89921 495.76195 150.60387 495.76195 C
166.20803 495.76224 177.71669 493.72441 185.15169 489.67143 C
192.60680 485.61846 196.32472 479.31732 196.32472 470.76973 C
196.32472 463.35657 193.30016 457.28674 187.27285 452.56139 C
181.24554 447.85672 172.50831 444.68532 161.06230 443.08998 C
160.01291 446.59701 L
165.89339 448.57162 170.21934 451.19594 173.01260 454.51474 C
175.80586 457.81200 177.19172 461.94917 177.19172 466.90554 C
177.19172 474.08797 175.07083 479.75868 170.82879 483.89584 C
166.58589 488.03329 160.51635 490.36450 152.64113 490.84724 C
152.64113 435.02513 L
152.64113 428.70331 152.80894 424.37735 153.16583 422.04614 C
153.50230 419.69395 154.11090 417.97134 154.97235 416.87943 C
156.16913 415.34674 158.22737 414.04450 161.18872 412.97301 C
164.15008 411.88139 167.86715 411.01994 172.38274 410.41106 C
172.38274 407.02989 L
167.74129 407.15603 163.14180 407.26091 158.56328 407.32384 C
154.00602 407.38706 149.49099 407.40775 145.08028 407.40775 C
140.64917 407.40775 136.30195 407.38677 132.05934 407.32384 C
127.81729 407.26091 123.61663 407.15603 119.47918 407.02989 C
@c
286.11723 490.21739 m
286.11723 465.09931 L
282.16857 465.09931 L
280.15285 473.83625 276.87628 480.32532 272.31902 484.58920 C
267.78274 488.83124 261.88101 490.95213 254.61439 490.95213 C
245.52085 490.95213 237.91861 487.29770 231.84879 480.01068 C
225.77924 472.70183 222.75553 463.46145 222.75553 452.26743 C
222.75553 447.62627 223.30120 443.19430 224.41436 438.97323 C
225.52753 434.75187 227.14413 430.82447 229.26586 427.21228 C
232.47865 421.85735 236.44772 417.67795 241.21531 414.73729 C
245.96192 411.77622 251.10737 410.30617 256.65165 410.30617 C
263.16198 410.30646 269.02148 412.65836 274.18819 417.34148 C
279.35433 422.04614 283.82769 429.06047 287.58728 438.40630 C
291.40980 437.41871 L
290.29663 431.81178 289.07858 426.70857 287.75509 422.15102 C
286.41146 417.57307 284.94085 413.49798 283.34523 409.92803 C
279.43909 408.16431 275.17493 406.84054 270.55502 405.95896 C
265.91357 405.07682 260.93594 404.63575 255.60198 404.63575 C
239.36740 404.63575 226.45134 408.66746 216.89603 416.73260 C
207.33987 424.77619 202.57228 435.65471 202.57228 449.36901 C
202.57228 455.92186 203.70643 461.97014 205.95373 467.51443 C
208.22202 473.03858 211.54025 477.97342 215.92970 482.27839 C
220.71827 486.94110 226.53553 490.53260 233.40274 493.01065 C
240.24983 495.48841 247.72592 496.72772 255.85370 496.72772 C
261.06208 496.72800 266.18655 496.18176 271.22712 495.08986 C
276.26769 494.01836 281.24476 492.38050 286.11723 490.21739 C
@c
294.08712 407.02989 m
294.08712 410.41134 L
300.53452 411.10384 304.79754 412.78394 306.91871 415.43065 C
309.04016 418.07650 310.08983 424.41902 310.08983 434.47890 C
310.08983 467.28397 L
310.08983 472.19811 309.90076 476.16718 309.50220 479.19175 C
309.12435 482.19477 308.51490 484.31622 307.69597 485.55496 C
306.70894 487.02472 305.15443 488.22236 303.01228 489.14646 C
300.87014 490.07083 297.90907 490.84724 294.08712 491.45669 C
294.08712 494.71200 L
299.71531 495.08986 305.11276 495.34186 310.32113 495.50939 C
315.52951 495.67748 320.50658 495.76195 325.21153 495.76195 C
340.81569 495.76224 352.32406 493.72441 359.75934 489.67143 C
367.21417 485.61846 370.93238 479.31732 370.93238 470.76973 C
370.93238 463.35657 367.90753 457.28674 361.88022 452.56139 C
355.85320 447.85672 347.11569 444.68532 335.66995 443.08998 C
334.62057 446.59701 L
340.50076 448.57162 344.82671 451.19594 347.61997 454.51474 C
350.41323 457.81200 351.79937 461.94917 351.79937 466.90554 C
351.79965 474.08797 349.67820 479.75868 345.43616 483.89584 C
341.19354 488.03329 335.12372 490.36450 327.24850 490.84724 C
327.24850 435.02513 L
327.24850 428.70331 327.41631 424.37735 327.77348 422.04614 C
328.10995 419.69395 328.71855 417.97134 329.57972 416.87943 C
330.77679 415.34674 332.83502 414.04450 335.79609 412.97301 C
338.75745 411.88139 342.47452 411.01994 346.99011 410.41106 C
346.99011 407.02989 L
342.34866 407.15603 337.74917 407.26091 333.17065 407.32384 C
328.61367 407.38706 324.09836 407.40775 319.68765 407.40775 C
315.25682 407.40775 310.90961 407.38677 306.66671 407.32384 C
302.42466 407.26091 298.22428 407.15603 294.08712 407.02989 C
@c
467.13402 406.94995 m
453.61162 419.07770 L
437.64520 409.97679 419.17635 411.18690 403.76211 421.49764 C
403.42025 421.68217 403.18271 421.94438 402.73483 422.18135 C
402.39524 422.18164 L
400.57824 420.10299 398.86923 417.36813 397.84280 414.63241 C
398.71106 413.15981 401.07770 411.94970 400.26246 409.63323 C
400.08019 408.79134 399.23717 408.08239 398.26290 407.81962 C
395.60712 407.71332 394.47609 410.63386 392.58085 412.10617 C
391.81776 412.92369 391.10939 413.31657 390.71367 414.18454 C
397.84309 433.62567 L
398.10586 433.78441 L
408.83896 424.49613 425.35956 419.60523 438.85474 424.68066 C
440.64397 425.36580 442.80170 426.20712 444.06227 427.60120 C
443.98346 427.91698 L
438.30283 433.36233 432.19871 438.78047 426.30690 444.17565 C
425.67534 444.69893 425.27991 445.14624 424.65005 445.56888 C
424.33483 445.56917 L
421.22920 442.72772 418.80756 439.22891 415.54743 436.36054 C
415.20529 436.44047 L
407.31307 443.48939 L
409.86425 446.96239 413.07307 449.77805 415.80935 453.46139 C
415.62539 453.96028 L
413.33783 456.30057 L
414.23216 458.01269 415.70532 459.40592 417.28224 460.74756 C
418.54507 460.48422 418.99323 458.88009 420.51742 458.69613 C
422.75452 460.74756 424.41137 463.40391 426.96340 465.50835 C
437.64520 461.19430 L
437.77616 460.85187 L
435.04044 457.30148 431.93594 454.56661 429.19909 450.90907 C
429.19937 450.80504 429.27817 450.64545 429.46214 450.40904 C
434.96192 445.49036 440.46000 440.75424 446.21943 435.94072 C
447.69345 434.83521 448.63994 433.70447 450.08731 432.86287 C
450.61342 432.99439 L
456.71698 439.54469 458.69046 449.88236 456.95254 458.08951 C
454.74406 471.84888 446.29852 484.13395 435.48831 490.68340 C
430.98775 493.60394 425.41313 495.86542 420.38702 497.39159 C
422.49175 497.83946 425.01827 497.02365 427.41128 496.62879 C
445.19386 492.05310 457.92794 482.16076 465.29263 466.08803 C
471.50164 453.46167 470.63367 439.62350 462.21562 427.78573 C
459.81950 424.68066 L
459.81950 424.33965 L
460.05676 423.78605 460.66365 423.54964 461.08318 423.02324 C
472.52806 412.92369 L
471.08126 410.81754 469.26510 408.84605 467.37099 406.94967 C
467.13402 406.94995 L
@c
405.60435 496.78016 m
403.73461 502.56482 L
401.54797 496.81729 L
396.15279 496.81729 L
400.84299 493.88202 L
398.08658 487.71099 L
404.02375 491.69622 L
409.09918 487.91906 L
406.69739 494.09887 L
411.32296 496.78016 L
405.60435 496.78016 L
@c
F

@rax %Note: Object
103.90195 345.66435 491.49751 373.47307 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 1.00 0.00 1.00 0.00 null ] set_fill_color
103.90195 373.47307 m
491.49751 373.47307 L
491.49751 345.66435 L
103.90195 345.66435 L
103.90195 373.47307 L
@c
F

@rax %Note: Object
118.45871 129.52431 476.94047 310.87928 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
351.58677 158.09783 m
330.70422 176.82690 L
306.04365 162.76989 277.52400 164.63877 253.71638 180.56466 C
253.18828 180.84898 252.82261 181.25546 252.13181 181.62085 C
251.60372 181.62085 L
248.80054 178.41146 246.15978 174.18614 244.57521 169.96110 C
245.91600 167.68573 249.57241 165.81713 248.31298 162.24180 C
248.02866 160.94183 246.72841 159.84482 245.22520 159.43861 C
241.12205 159.27591 239.37506 163.78554 236.44998 166.06091 C
235.27162 167.32035 234.17461 167.92951 233.56545 169.27030 C
244.57521 199.29373 L
244.98170 199.53751 L
261.55757 185.19619 287.07137 177.63959 307.91254 185.48050 C
310.67546 186.53698 314.00646 187.83694 315.95669 189.99014 C
315.83509 190.47770 L
307.05931 198.88753 297.63439 207.25682 288.53376 215.58529 C
287.55893 216.39770 286.94948 217.08850 285.97436 217.73849 C
285.48680 217.73849 L
280.69285 213.35074 276.95509 207.94734 271.91735 203.51906 C
271.38926 203.64094 L
259.20113 214.52910 L
263.14186 219.89169 268.09852 224.23890 272.32356 229.92661 C
272.03924 230.69849 L
268.50472 234.31436 L
269.88605 236.95512 272.16113 239.10831 274.59865 241.18044 C
276.54888 240.77424 277.23940 238.29591 279.59584 238.01159 C
283.04929 241.18044 285.60869 245.28359 289.54970 248.53380 C
306.04365 241.87096 L
306.24690 241.34287 L
302.02157 235.85811 297.22819 231.63307 293.00287 225.98589 C
293.00287 225.82318 293.12476 225.57969 293.40907 225.21402 C
301.89997 217.61688 310.39087 210.30378 319.28797 202.86907 C
321.56306 201.16261 323.02573 199.41562 325.26028 198.11565 C
326.07269 198.31861 L
335.49817 208.43490 338.54542 224.40132 335.86384 237.07701 C
332.45150 258.32494 319.40986 277.29780 302.71209 287.41408 C
295.76551 291.92372 287.15244 295.41770 279.39288 297.77414 C
282.64280 298.46466 286.54328 297.20523 290.24022 296.59578 C
317.70397 289.52674 337.36706 274.25083 348.74277 249.42784 C
358.33068 229.92661 356.99017 208.55679 343.98935 190.27446 C
340.29241 185.48050 L
340.29241 184.95241 L
340.65808 184.09918 341.59238 183.73351 342.24236 182.92110 C
359.91524 167.32035 L
357.68069 164.07014 354.87751 161.02290 351.95244 158.09783 C
351.58677 158.09783 L
@c
122.31184 145.11855 m
126.01020 145.11855 L
127.00998 145.11855 127.73820 145.33002 128.19543 145.75663 C
128.64813 146.18296 128.87603 146.86413 128.87603 147.80778 C
128.87603 148.69162 128.65209 149.35975 128.20819 149.81641 C
127.75975 150.26910 127.09616 150.49757 126.21288 150.49757 C
122.31184 150.49757 L
122.31184 145.11855 L
@c
122.28633 141.74844 m
122.28633 135.13209 L
118.45871 135.13209 L
118.45871 153.72992 L
126.72964 153.72992 L
128.68243 153.72992 130.16069 153.22195 131.16926 152.20857 C
132.17386 151.19575 132.67786 149.70898 132.67786 147.74372 C
132.67786 145.82523 132.18661 144.34696 131.19959 143.30863 C
130.21654 142.26973 128.80743 141.74844 126.98391 141.74844 C
122.28633 141.74844 L
@c
142.56964 136.83458 m
142.10419 136.12337 141.50041 135.57600 140.75036 135.20126 C
140.00060 134.82595 139.12980 134.64057 138.13427 134.64057 C
136.80255 134.64057 135.78123 135.02013 135.06123 135.77868 C
134.34123 136.53723 133.97924 137.61496 133.97924 139.01131 C
133.97924 140.30816 134.33726 141.29546 135.05698 141.97635 C
135.77698 142.66205 136.96639 143.12721 138.62551 143.38176 C
139.00479 143.43761 139.50057 143.50677 140.11710 143.57991 C
141.67757 143.78230 142.45285 144.23499 142.45285 144.93317 C
142.45285 145.48932 142.28022 145.88561 141.93609 146.12683 C
141.59112 146.36438 141.01342 146.48485 140.20753 146.48485 C
139.46598 146.48485 138.89735 146.33830 138.50050 146.04491 C
138.10422 145.74784 137.90551 145.33002 137.90551 144.78236 C
137.90551 144.57997 L
134.47077 144.57997 L
134.47077 144.83395 L
134.47077 146.23937 134.96655 147.34290 135.96180 148.14425 C
136.95364 148.95014 138.32844 149.35153 140.07798 149.35153 C
141.99619 149.35153 143.47020 149.01931 144.49181 148.35515 C
145.51313 147.68731 146.02620 146.73061 146.02620 145.47657 C
146.02620 137.67080 L
146.02620 137.09735 146.08658 136.67074 146.20280 136.38614 C
146.31902 136.10608 146.51717 135.89518 146.79780 135.75317 C
146.79780 135.13209 L
142.97046 135.13209 L
142.84545 135.36907 142.75020 135.62759 142.68161 135.91644 C
142.61244 136.20076 142.57814 136.50690 142.56964 136.83458 C
@c
142.50444 141.89017 m
141.90548 141.61011 141.21581 141.38589 140.43997 141.21808 C
139.66016 141.04998 139.25480 140.96409 139.23326 140.95531 C
138.58243 140.76992 138.12973 140.53691 137.87121 140.26110 C
137.61723 139.98104 137.48769 139.59751 137.48769 139.10995 C
137.48769 138.60567 137.65153 138.20117 137.97921 137.90324 C
138.31115 137.60617 138.75080 137.45565 139.30639 137.45565 C
140.30220 137.45565 141.08258 137.73572 141.65150 138.29584 C
142.22041 138.85597 142.50444 139.61906 142.50444 140.58879 C
142.50444 141.89017 L
@c
149.23247 135.13209 m
149.23247 148.85943 L
152.64198 148.85943 L
152.64198 146.51093 L
153.12444 147.45033 153.68513 148.14425 154.32293 148.58391 C
154.96101 149.02781 155.72353 149.24750 156.60709 149.24750 C
156.74939 149.24750 156.86164 149.24750 156.94356 149.24353 C
157.02094 149.23899 157.08586 149.23020 157.13717 149.22142 C
157.15049 145.49811 L
155.92620 145.49811 L
154.92671 145.49811 154.17213 145.23477 153.66813 144.71320 C
153.16384 144.19191 152.90929 143.42031 152.90929 142.39049 C
152.90929 135.13209 L
149.23247 135.13209 L
@c
165.25729 135.03288 m
164.92139 135.02409 164.52057 135.00709 164.05058 134.98554 C
163.58513 134.96372 163.28806 134.95493 163.16306 134.95493 C
161.75367 134.95493 160.79187 135.21855 160.27483 135.74409 C
159.75808 136.26992 159.49956 137.30882 159.49956 138.85597 C
159.49956 146.28246 L
157.68028 146.28246 L
157.68028 148.85943 L
159.49956 148.85943 L
159.49956 152.60967 L
163.13698 152.60967 L
163.13698 148.85943 L
165.25729 148.85943 L
165.25729 146.28246 L
163.13698 146.28246 L
163.13698 138.67937 L
163.13698 138.31739 163.21890 138.07984 163.37820 137.96816 C
163.53808 137.85194 163.86520 137.79553 164.36069 137.79553 C
165.25729 137.79553 L
165.25729 135.03288 L
@c
167.45528 150.38986 m
167.45528 153.73446 L
171.13181 153.73446 L
171.13181 150.38986 L
167.45528 150.38986 L
@c
167.45528 135.13209 m
167.45528 148.85943 L
171.13181 148.85943 L
171.13181 135.13209 L
167.45528 135.13209 L
@c
187.02765 153.72992 m
187.02765 135.13209 L
183.54529 135.13209 L
183.54529 136.98964 L
183.01493 136.18800 182.41569 135.60208 181.75635 135.22677 C
181.09672 134.85203 180.31691 134.66665 179.42457 134.66665 C
177.73483 134.66665 176.36457 135.33477 175.31688 136.67528 C
174.26948 138.01124 173.74365 139.76589 173.74365 141.93751 C
173.74365 144.12728 174.26948 145.90715 175.31688 147.27373 C
176.36457 148.63975 177.71783 149.32545 179.37694 149.32545 C
180.26107 149.32545 181.04967 149.14006 181.74359 148.76929 C
182.43723 148.39852 183.01493 147.85994 183.46791 147.15298 C
183.46791 153.72992 L
187.02765 153.72992 L
@c
177.42047 142.08831 m
177.42047 140.70076 177.68296 139.64031 178.20482 138.91181 C
178.72611 138.18331 179.47616 137.82132 180.46346 137.82132 C
181.43773 137.82132 182.18324 138.18331 182.69575 138.90784 C
183.20882 139.63181 183.46791 140.69225 183.46791 142.08831 C
183.46791 143.38602 183.20003 144.38580 182.66145 145.08850 C
182.12287 145.79093 181.36403 146.14469 180.38551 146.14469 C
179.46737 146.14469 178.74765 145.78271 178.21757 145.06243 C
177.68721 144.34243 177.42047 143.35115 177.42047 142.08831 C
@c
193.35061 142.01518 m
193.35061 140.65342 193.63068 139.60205 194.19080 138.86022 C
194.75150 138.11924 195.54860 137.74847 196.58296 137.74847 C
197.60457 137.74847 198.39345 138.11924 198.95357 138.86022 C
199.51427 139.60205 199.79433 140.65342 199.79433 142.01518 C
199.79433 143.36844 199.51852 144.41613 198.96236 145.15285 C
198.40620 145.89014 197.61307 146.25638 196.58296 146.25638 C
195.54860 146.25638 194.75150 145.89014 194.19080 145.15285 C
193.63068 144.41613 193.35061 143.36844 193.35061 142.01518 C
@c
189.62674 142.01518 m
189.62674 144.29537 190.24724 146.08857 191.48428 147.39449 C
192.72132 148.70013 194.41956 149.35153 196.58750 149.35153 C
198.74268 149.35153 200.44063 148.70013 201.68220 147.39449 C
202.92321 146.08857 203.54343 144.29537 203.54343 142.01518 C
203.54343 139.72649 202.92321 137.92932 201.68220 136.62312 C
200.44063 135.31748 198.74268 134.66665 196.58750 134.66665 C
194.41956 134.66665 192.72132 135.31748 191.48428 136.62312 C
190.24724 137.92932 189.62674 139.72649 189.62674 142.01518 C
@c
229.89572 141.51969 m
229.75342 139.40759 228.93874 137.72665 227.45140 136.48139 C
225.96491 135.23556 224.02488 134.61506 221.63726 134.61506 C
218.88312 134.61506 216.74126 135.47254 215.21537 137.19203 C
213.68551 138.90784 212.92271 141.31729 212.92271 144.41613 C
212.92271 147.57931 213.70252 150.00180 215.25846 151.68699 C
216.81439 153.37247 219.05575 154.21266 221.97827 154.21266 C
224.35313 154.21266 226.22769 153.63524 227.60249 152.47587 C
228.97757 151.32076 229.73613 149.68290 229.86964 147.57080 C
226.09389 147.57080 L
225.93487 148.62246 225.50343 149.42438 224.80526 149.97572 C
224.10680 150.52762 223.16315 150.80372 221.97827 150.80372 C
220.29279 150.80372 219.01266 150.26031 218.13761 149.17436 C
217.26255 148.08841 216.82318 146.50214 216.82318 144.41613 C
216.82318 142.39417 217.25802 140.83398 218.12939 139.73102 C
219.00444 138.62778 220.24091 138.07559 221.85298 138.07559 C
223.01263 138.07559 223.96507 138.37323 224.70633 138.96369 C
225.44731 139.55839 225.92608 140.40794 226.14576 141.51969 C
229.89572 141.51969 L
@c
235.66280 142.01518 m
235.66280 140.65342 235.94287 139.60205 236.50299 138.86022 C
237.06312 138.11924 237.86079 137.74847 238.89515 137.74847 C
239.91647 137.74847 240.70564 138.11924 241.26576 138.86022 C
241.82589 139.60205 242.10595 140.65342 242.10595 142.01518 C
242.10595 143.36844 241.83014 144.41613 241.27398 145.15285 C
240.71839 145.89014 239.92526 146.25638 238.89515 146.25638 C
237.86079 146.25638 237.06312 145.89014 236.50299 145.15285 C
235.94287 144.41613 235.66280 143.36844 235.66280 142.01518 C
@c
231.93865 142.01518 m
231.93865 144.29537 232.55887 146.08857 233.79647 147.39449 C
235.03294 148.70013 236.73118 149.35153 238.89969 149.35153 C
241.05430 149.35153 242.75225 148.70013 243.99439 147.39449 C
245.23512 146.08857 245.85562 144.29537 245.85562 142.01518 C
245.85562 139.72649 245.23512 137.92932 243.99439 136.62312 C
242.75225 135.31748 241.05430 134.66665 238.89969 134.66665 C
236.73118 134.66665 235.03294 135.31748 233.79647 136.62312 C
232.55887 137.92932 231.93865 139.72649 231.93865 142.01518 C
@c
248.35124 135.13209 m
248.35124 148.85943 L
251.83814 148.85943 L
251.83814 147.34290 L
252.35121 147.97162 252.92409 148.45039 253.55339 148.76929 C
254.18721 149.08791 254.88510 149.24750 255.65272 149.24750 C
256.51899 149.24750 257.26054 149.08365 257.87225 148.76079 C
258.48879 148.43707 259.02283 147.92910 259.47553 147.23065 C
259.95827 147.90302 260.52321 148.40731 261.18255 148.74321 C
261.83735 149.07969 262.57011 149.24750 263.38054 149.24750 C
264.75959 149.24750 265.85461 148.84271 266.66476 148.03654 C
267.47065 147.22611 267.87628 146.12683 267.87628 144.72652 C
267.87628 135.13209 L
264.25106 135.13209 L
264.25106 143.97222 L
264.25106 144.63581 264.07020 145.15285 263.71247 145.51909 C
263.35502 145.88561 262.85896 146.06702 262.21691 146.06702 C
261.50145 146.06702 260.93254 145.83402 260.51443 145.36431 C
260.09178 144.89887 259.88088 144.26050 259.88088 143.45461 C
259.88088 135.13209 L
256.29477 135.13209 L
256.29477 143.94614 L
256.29477 144.61880 256.11817 145.14009 255.76894 145.51087 C
255.41972 145.88107 254.93272 146.06702 254.29890 146.06702 C
253.58400 146.06702 253.01934 145.82976 252.60094 145.35978 C
252.18312 144.89036 251.97619 144.24350 251.97619 143.42882 C
251.97619 135.13209 L
248.35124 135.13209 L
@c
283.26728 148.85943 m
283.26728 135.13209 L
279.66869 135.13209 L
279.66869 136.76145 L
279.14683 136.09729 278.53455 135.59754 277.84120 135.26561 C
277.14699 134.93395 276.36718 134.76557 275.50035 134.76557 C
273.99231 134.76557 272.86299 135.16243 272.10869 135.95131 C
271.35439 136.74387 270.97909 137.92932 270.97909 139.50227 C
270.97937 148.85943 L
274.65591 148.85943 L
274.65591 140.56271 L
274.65591 139.58419 274.81975 138.89027 275.14743 138.47244 C
275.47483 138.05433 276.01795 137.84740 276.77622 137.84740 C
277.63398 137.84740 278.31940 138.10592 278.82794 138.62353 C
279.33647 139.14028 279.59074 139.84753 279.59074 140.73987 C
279.59074 148.85943 L
283.26728 148.85943 L
@c
286.47383 135.13209 m
286.47383 148.85943 L
290.07298 148.85943 L
290.07298 147.23065 L
290.59030 147.89424 291.19380 148.39455 291.89225 148.72592 C
292.59014 149.05814 293.37052 149.22595 294.22800 149.22595 C
295.74539 149.22595 296.87839 148.83392 297.63298 148.04532 C
298.38671 147.25644 298.76145 146.07553 298.76145 144.48926 C
298.76173 135.13209 L
295.08605 135.13209 L
295.08605 143.42882 L
295.08605 144.41613 294.91767 145.11855 294.58545 145.53694 C
294.25380 145.95931 293.71493 146.17020 292.96488 146.17020 C
292.09861 146.17020 291.41348 145.91169 290.90920 145.39465 C
290.40491 144.87704 290.15036 144.17036 290.15036 143.27802 C
290.15036 135.13209 L
286.47383 135.13209 L
@c
301.99465 150.38986 m
301.99465 153.73446 L
305.67090 153.73446 L
305.67090 150.38986 L
301.99465 150.38986 L
@c
301.99465 135.13209 m
301.99465 148.85943 L
305.67090 148.85943 L
305.67090 135.13209 L
301.99465 135.13209 L
@c
308.17871 139.60573 m
311.84277 139.60573 L
311.87707 138.90784 312.12737 138.38598 312.60104 138.04554 C
313.07102 137.70510 313.77770 137.53304 314.72192 137.53304 C
315.43739 137.53304 315.99326 137.65380 316.38529 137.89502 C
316.77761 138.13200 316.97150 138.47244 316.97150 138.91181 C
316.97150 139.53288 316.23846 140.00230 314.77351 140.31269 C
314.17427 140.43770 313.70031 140.54995 313.34655 140.64038 C
311.55789 141.09732 310.32142 141.63194 309.62721 142.25641 C
308.93329 142.87748 308.58406 143.72192 308.58406 144.78236 C
308.58435 146.18721 309.09317 147.29924 310.10542 148.11846 C
311.11852 148.94135 312.49361 149.35153 314.22614 149.35153 C
316.06243 149.35153 317.50611 148.94135 318.55323 148.12724 C
319.60120 147.30803 320.15707 146.16170 320.22567 144.67890 C
316.65288 144.67890 L
316.62680 145.26085 316.40683 145.70901 315.98901 146.03216 C
315.57515 146.35106 314.99320 146.51093 314.25222 146.51093 C
313.55405 146.51093 313.03616 146.40690 312.69572 146.19600 C
312.35584 145.98482 312.18321 145.67017 312.18321 145.24809 C
312.18350 144.70044 313.09710 144.21798 314.92403 143.79506 C
315.34243 143.70491 315.67465 143.62753 315.92013 143.56658 C
317.74734 143.14025 318.99713 142.62293 319.66526 142.01518 C
320.33339 141.41197 320.66957 140.55846 320.66957 139.45521 C
320.66957 137.89502 320.12220 136.70957 319.02321 135.89093 C
317.92450 135.07625 316.32491 134.66665 314.23039 134.66665 C
312.33402 134.66665 310.85150 135.09326 309.78227 135.94252 C
308.71361 136.79150 308.17871 137.96362 308.17871 139.45521 C
308.17871 139.60573 L
@c
329.16501 135.03288 m
328.82882 135.02409 328.42772 135.00709 327.95830 134.98554 C
327.49257 134.96372 327.19521 134.95493 327.07020 134.95493 C
325.66110 134.95493 324.69959 135.21855 324.18198 135.74409 C
323.66551 136.26992 323.40671 137.30882 323.40671 138.85597 C
323.40671 146.28246 L
321.58772 146.28246 L
321.58772 148.85943 L
323.40671 148.85943 L
323.40671 152.60967 L
327.04413 152.60967 L
327.04413 148.85943 L
329.16501 148.85943 L
329.16501 146.28246 L
327.04413 146.28246 L
327.04413 138.67937 L
327.04413 138.31739 327.12661 138.07984 327.28592 137.96816 C
327.44494 137.85194 327.77235 137.79553 328.26841 137.79553 C
329.16501 137.79553 L
329.16501 135.03288 L
@c
339.15600 136.83458 m
338.69055 136.12337 338.08649 135.57600 337.33644 135.20126 C
336.58668 134.82595 335.71587 134.64057 334.72035 134.64057 C
333.38891 134.64057 332.36731 135.02013 331.64731 135.77868 C
330.92731 136.53723 330.56532 137.61496 330.56532 139.01131 C
330.56532 140.30816 330.92334 141.29546 331.64306 141.97635 C
332.36306 142.66205 333.55247 143.12721 335.21187 143.38176 C
335.59115 143.43761 336.08665 143.50677 336.70346 143.57991 C
338.26365 143.78230 339.03893 144.23499 339.03893 144.93317 C
339.03921 145.48932 338.86687 145.88561 338.52217 146.12683 C
338.17748 146.36438 337.59950 146.48485 336.79361 146.48485 C
336.05235 146.48485 335.48343 146.33830 335.08658 146.04491 C
334.69058 145.74784 334.49159 145.33002 334.49159 144.78236 C
334.49159 144.57997 L
331.05713 144.57997 L
331.05713 144.83395 L
331.05713 146.23937 331.55263 147.34290 332.54787 148.14425 C
333.54000 148.95014 334.91452 149.35153 336.66406 149.35153 C
338.58255 149.35153 340.05628 149.01931 341.07789 148.35515 C
342.09921 147.68731 342.61228 146.73061 342.61228 145.47657 C
342.61257 137.67080 L
342.61257 137.09735 342.67266 136.67074 342.78888 136.38614 C
342.90539 136.10608 343.10324 135.89518 343.38387 135.75317 C
343.38387 135.13209 L
339.55682 135.13209 L
339.43153 135.36907 339.33685 135.62759 339.26769 135.91644 C
339.19880 136.20076 339.16422 136.50690 339.15600 136.83458 C
@c
339.09080 141.89017 m
338.49156 141.61011 337.80189 141.38589 337.02605 141.21808 C
336.24652 141.04998 335.84117 140.96409 335.81934 140.95531 C
335.16850 140.76992 334.71581 140.53691 334.45786 140.26110 C
334.20331 139.98104 334.07376 139.59751 334.07376 139.10995 C
334.07405 138.60567 334.23761 138.20117 334.56529 137.90324 C
334.89723 137.60617 335.33688 137.45565 335.89247 137.45565 C
336.88857 137.45565 337.66866 137.73572 338.23757 138.29584 C
338.80649 138.85597 339.09052 139.61906 339.09052 140.58879 C
339.09080 141.89017 L
@c
357.33572 145.11855 m
361.03351 145.11855 L
362.03329 145.11855 362.76151 145.33002 363.21874 145.75663 C
363.67115 146.18296 363.89962 146.86413 363.89962 147.80778 C
363.89962 148.69162 363.67540 149.35975 363.23150 149.81641 C
362.78334 150.26910 362.11946 150.49757 361.23619 150.49757 C
357.33572 150.49757 L
357.33572 145.11855 L
@c
357.30992 141.74844 m
357.30992 135.13209 L
353.48230 135.13209 L
353.48230 153.72992 L
361.75323 153.72992 L
363.70602 153.72992 365.18428 153.22195 366.19257 152.20857 C
367.19745 151.19575 367.70145 149.70898 367.70145 147.74372 C
367.70173 145.82523 367.20992 144.34696 366.22290 143.30863 C
365.24013 142.26973 363.83102 141.74844 362.00721 141.74844 C
357.30992 141.74844 L
@c
372.99458 142.01518 m
372.99458 140.65342 373.27436 139.60205 373.83449 138.86022 C
374.39490 138.11924 375.19200 137.74847 376.22665 137.74847 C
377.24797 137.74847 378.03685 138.11924 378.59698 138.86022 C
379.15767 139.60205 379.43745 140.65342 379.43745 142.01518 C
379.43773 143.36844 379.16164 144.41613 378.60548 145.15285 C
378.04961 145.89014 377.25647 146.25638 376.22665 146.25638 C
375.19228 146.25638 374.39461 145.89014 373.83449 145.15285 C
373.27465 144.41613 372.99430 143.36844 372.99458 142.01518 C
@c
369.26986 142.01518 m
369.26986 144.29537 369.89036 146.08857 371.12797 147.39449 C
372.36444 148.70013 374.06296 149.35153 376.23090 149.35153 C
378.38580 149.35153 380.08375 148.70013 381.32561 147.39449 C
382.56690 146.08857 383.18712 144.29537 383.18712 142.01518 C
383.18740 139.72649 382.56661 137.92932 381.32561 136.62312 C
380.08403 135.31748 378.38580 134.66665 376.23090 134.66665 C
374.06296 134.66665 372.36444 135.31748 371.12797 136.62312 C
369.89065 137.92932 369.26986 139.72649 369.26986 142.01518 C
@c
385.68274 135.13209 m
385.68274 148.85943 L
389.09254 148.85943 L
389.09254 146.51093 L
389.57471 147.45033 390.13540 148.14425 390.77291 148.58391 C
391.41071 149.02781 392.17380 149.24750 393.05735 149.24750 C
393.19965 149.24750 393.31191 149.24750 393.39383 149.24353 C
393.47150 149.23899 393.53584 149.23020 393.58743 149.22142 C
393.60019 145.49811 L
392.37591 145.49811 L
391.37641 145.49811 390.62211 145.23477 390.11783 144.71320 C
389.61354 144.19191 389.35956 143.42031 389.35956 142.39049 C
389.35956 135.13209 L
385.68274 135.13209 L
@c
401.70756 135.03288 m
401.37165 135.02409 400.97027 135.00709 400.50085 134.98554 C
400.03569 134.96372 399.73776 134.95493 399.61304 134.95493 C
398.20365 134.95493 397.24214 135.21855 396.72510 135.74409 C
396.20806 136.26992 395.94926 137.30882 395.94926 138.85597 C
395.94926 146.28246 L
394.13083 146.28246 L
394.13083 148.85943 L
395.94926 148.85943 L
395.94926 152.60967 L
399.58724 152.60967 L
399.58724 148.85943 L
401.70756 148.85943 L
401.70756 146.28246 L
399.58724 146.28246 L
399.58724 138.67937 L
399.58724 138.31739 399.66917 138.07984 399.82847 137.96816 C
399.98806 137.85194 400.31546 137.79553 400.81096 137.79553 C
401.70756 137.79553 L
401.70756 135.03288 L
@c
416.06419 148.85943 m
416.06419 135.13209 L
412.46561 135.13209 L
412.46561 136.76145 L
411.94375 136.09729 411.33203 135.59754 410.63783 135.26561 C
409.94391 134.93395 409.16409 134.76557 408.29726 134.76557 C
406.78894 134.76557 405.65991 135.16243 404.90561 135.95131 C
404.15131 136.74387 403.77657 137.92932 403.77657 139.50227 C
403.77685 148.85943 L
407.45282 148.85943 L
407.45282 140.56271 L
407.45282 139.58419 407.61638 138.89027 407.94406 138.47244 C
408.27203 138.05433 408.81487 137.84740 409.57313 137.84740 C
410.43175 137.84740 411.11603 138.10592 411.62513 138.62353 C
412.13367 139.14028 412.38794 139.84753 412.38794 140.73987 C
412.38794 148.85943 L
416.06419 148.85943 L
@c
422.27546 142.21814 m
422.27546 140.92923 422.53370 139.93795 423.05131 139.24828 C
423.56863 138.55861 424.30989 138.21392 425.26630 138.21392 C
426.23631 138.21392 426.97757 138.55861 427.48639 139.24828 C
427.99465 139.93795 428.24891 140.94624 428.24891 142.26973 C
428.24920 143.52378 427.98614 144.49351 427.46031 145.17893 C
426.93449 145.86463 426.18444 146.20876 425.21868 146.20876 C
424.28381 146.20876 423.55928 145.86009 423.04677 145.16164 C
422.53398 144.46318 422.27518 143.48069 422.27546 142.21814 C
@c
418.95666 133.80491 m
422.97335 133.81767 L
423.08957 133.35647 423.33137 133.01178 423.69761 132.78302 C
424.06356 132.55455 424.55509 132.44287 425.17162 132.44287 C
426.31427 132.44287 427.11109 132.68409 427.56831 133.16683 C
428.02044 133.65383 428.24891 134.54589 428.24891 135.85153 C
428.24920 137.07581 L
427.86142 136.41222 427.35685 135.92069 426.74031 135.60633 C
426.11981 135.29140 425.34822 135.13209 424.42157 135.13209 C
422.64595 135.13209 421.22324 135.76535 420.15487 137.03272 C
419.08564 138.29981 418.55102 139.98557 418.55102 142.08831 C
418.55102 144.31266 419.07685 146.07978 420.12454 147.38542 C
421.17165 148.69559 422.58529 149.35153 424.36148 149.35153 C
425.28784 149.35153 426.07672 149.17436 426.72756 148.82117 C
427.37839 148.46769 427.91244 147.92910 428.32658 147.20513 C
428.32687 148.85943 L
431.80894 148.85943 L
431.80894 136.04145 L
431.80894 134.60173 431.67543 133.50274 431.40387 132.74447 C
431.13713 131.98564 430.67537 131.35238 430.02907 130.83931 C
429.47291 130.40816 428.77049 130.08047 427.91244 129.86079 C
427.05978 129.63657 426.08551 129.52431 424.99020 129.52431 C
423.15420 129.52431 421.71506 129.89962 420.65915 130.64939 C
419.60693 131.39518 419.04255 132.45109 418.95666 133.80491 C
@c
447.27817 148.85943 m
447.27817 135.13209 L
443.67931 135.13209 L
443.67931 136.76145 L
443.15773 136.09729 442.54545 135.59754 441.85181 135.26561 C
441.15761 134.93395 440.37780 134.76557 439.51124 134.76557 C
438.00293 134.76557 436.87389 135.16243 436.11931 135.95131 C
435.36501 136.74387 434.98970 137.92932 434.98970 139.50227 C
434.98998 148.85943 L
438.66680 148.85943 L
438.66680 140.56271 L
438.66680 139.58419 438.83036 138.89027 439.15805 138.47244 C
439.48602 138.05433 440.02857 137.84740 440.78683 137.84740 C
441.64517 137.84740 442.33002 138.10592 442.83855 138.62353 C
443.34765 139.14028 443.60135 139.84753 443.60135 140.73987 C
443.60135 148.85943 L
447.27817 148.85943 L
@c
458.94529 139.29987 m
462.60879 139.29987 L
462.23887 137.85194 461.49250 136.71836 460.36772 135.89915 C
459.24350 135.07625 457.87209 134.66665 456.25606 134.66665 C
454.26898 134.66665 452.69603 135.33477 451.53213 136.66620 C
450.37247 138.00246 449.79080 139.80841 449.79080 142.09257 C
449.79109 144.33846 450.36425 146.10983 451.50605 147.40724 C
452.65294 148.70438 454.21710 149.35153 456.20391 149.35153 C
458.31203 149.35153 459.93657 148.71317 461.08346 147.43757 C
462.22526 146.16170 462.79871 144.34696 462.79871 141.98967 C
462.79871 141.72633 462.79871 141.53244 462.79417 141.39921 C
462.79020 141.26967 462.77717 141.14466 462.75987 141.02816 C
453.59291 141.02816 L
453.64422 139.95071 453.90699 139.14028 454.38094 138.59291 C
454.85546 138.04554 455.54031 137.77398 456.43266 137.77398 C
457.06620 137.77398 457.58324 137.89956 457.98435 138.14476 C
458.38998 138.39477 458.70831 138.77830 458.94529 139.29987 C
@c
453.59291 143.44186 m
458.99773 143.44186 L
458.96287 144.36850 458.71739 145.07093 458.26016 145.55849 C
457.79896 146.04123 457.13934 146.28246 456.28157 146.28246 C
455.48447 146.28246 454.85518 146.03669 454.39398 145.54970 C
453.93704 145.06243 453.67002 144.36028 453.59291 143.44186 C
@c
452.27764 150.49757 m
454.75200 155.16964 L
457.76041 155.16964 L
460.23392 150.49757 L
458.45405 150.49757 L
456.25635 153.23868 L
454.03228 150.49757 L
452.27764 150.49757 L
@c
464.44961 139.60573 m
468.11339 139.60573 L
468.14769 138.90784 468.39770 138.38598 468.87137 138.04554 C
469.34135 137.70510 470.04803 137.53304 470.99225 137.53304 C
471.70828 137.53304 472.26359 137.65380 472.65591 137.89502 C
473.04794 138.13200 473.24211 138.47244 473.24211 138.91181 C
473.24211 139.53288 472.50935 140.00230 471.04384 140.31269 C
470.44517 140.43770 469.97121 140.54995 469.61745 140.64038 C
467.82850 141.09732 466.59175 141.63194 465.89754 142.25641 C
465.20391 142.87748 464.85468 143.72192 464.85468 144.78236 C
464.85468 146.18721 465.36350 147.29924 466.37631 148.11846 C
467.38942 148.94135 468.76394 149.35153 470.49647 149.35153 C
472.33276 149.35153 473.77644 148.94135 474.82413 148.12724 C
475.87124 147.30803 476.42740 146.16170 476.49657 144.67890 C
472.92350 144.67890 L
472.89770 145.26085 472.67773 145.70901 472.25962 146.03216 C
471.84605 146.35106 471.26353 146.51093 470.52227 146.51093 C
469.82381 146.51093 469.30706 146.40690 468.96661 146.19600 C
468.62617 145.98482 468.45354 145.67017 468.45354 145.24809 C
468.45354 144.70044 469.36743 144.21798 471.19493 143.79506 C
471.61276 143.70491 471.94469 143.62753 472.19046 143.56658 C
474.01852 143.14025 475.26803 142.62293 475.93587 142.01518 C
476.60428 141.41197 476.94047 140.55846 476.94047 139.45521 C
476.94047 137.89502 476.39254 136.70957 475.29383 135.89093 C
474.19512 135.07625 472.59581 134.66665 470.50072 134.66665 C
468.60491 134.66665 467.12183 135.09326 466.05317 135.94252 C
464.98422 136.79150 464.44961 137.96362 464.44961 139.45521 C
464.44961 139.60573 L
@c
256.56123 296.83049 m
253.67329 305.75991 L
250.29666 296.88633 L
241.96677 296.88633 L
249.20816 292.35203 L
244.95279 282.82224 L
254.11975 288.97483 L
261.96094 283.14283 L
258.24926 292.68652 L
265.39313 296.83049 L
256.56123 296.83049 L
@c
257.79742 298.02586 m
253.64041 310.87928 L
248.77984 298.1                                                                                                                                                                                                                                                                                                                                   